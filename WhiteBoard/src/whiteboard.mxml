<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="605" height="590" creationComplete="initApp()" backgroundColor="#ffffff" borderStyle="none">
	<mx:Script>
		<![CDATA[
			import com.devaldi.events.DocumentLoadedEvent;
			import mx.events.ScrollEvent;
			import mx.events.FlexEvent;
			import com.devaldi.controls.flexpaper.FlexPaperViewer;
			import com.devaldi.events.PageLoadedEvent;
			import mx.binding.utils.BindingUtils;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import flash.events.MouseEvent;
			import flash.events.Event;		
			import com.MousePoint;
			import mx.collections.ArrayCollection;
			import mx.controls.Label;

			private var netConnection:NetConnection;
			private var netStream:NetStream;
			//private var appServer:String="rtmp://192.168.1.199/whiteboard";
			private var appServer:String="rtmp://www.chinesegreat.com:1935/whiteboard";
			// 远程共享对象
			private var remoteShareObject:SharedObject;	
			private var point_x:Number;
			private var point_y:Number;
			private var theId:uint=0;
			private var flexpaper:FlexPaperViewer = new FlexPaperViewer();
			// 画笔粗细
			[Bindable] private var __lineSize:uint;
			// 画笔颜色
			[Bindable] private var __lineColor:uint;
			// 首次加载文件标识
			[Bindable] private var flag:uint=0;
			// 首次加载文件页数标识
			[Bindable] private var pageFlag:uint;
			[Bindable] private var arr:Array = new Array({label:0,data:0});
			[Bindable] private var arrPen:Array = new Array({label:1,data:1},{label:2,data:2},{label:3,data:3},{label:4,data:4},{label:5,data:5});
			// 共享Key列表
			private var shareKeyList:ArrayCollection = new ArrayCollection();

			internal function initApp():void {
				netConnection = new NetConnection();
				// 连接FMS服务器
				netConnection.connect(appServer);
				netConnection.addEventListener(NetStatusEvent.NET_STATUS,netStatusHandler);
				flexpaper.width=600;
				flexpaper.height=1000;
				flexpaper.Scale=1;

				//dr.addChild(myPaper);
				dr.addChildAt(flexpaper,0);
				//初始空白swf文件加载
				flexpaper.addEventListener(FlexEvent.CREATION_COMPLETE, initSwf);
				//监听画板滚动事件
				mainPanel.addEventListener(ScrollEvent.SCROLL, roll);
				//swf加载完成
				flexpaper.addEventListener(DocumentLoadedEvent.DOCUMENT_LOADED, loadSwfComplete);
			}
			private function initSwf(evt:FlexEvent):void {
				//切换文件前清空画板
				flexpaper.SwfFile = "SEO.swf";
			}
			private function changPage(evt:PageLoadedEvent):void {
				//切换文件前清空画板
				flexpaper.paper1.gotoPage(pageFlag);
			}
			private function changeFile(param1:String):void {
				addShareKey("changeFile", param1);
				//切换文件前清空画板
				myPaper.graphics.clear();
				flexpaper.SwfFile=param1;
			}
			private function roll(evt:ScrollEvent):void {
				//垂直滚动事件
				addShareKey("verRoll", evt.position);
			}
			//共享滚动事件
			private function shareRoll(num:Number):void {
				// 设置panel坐标
				mainPanel.verticalScrollPosition=num;
			}
			private function loadSwfComplete(evt:DocumentLoadedEvent):void {
				//重新加载文件页数
				flexpaper.paper1.gotoPage(pageFlag);
				sp.selectedIndex = pageFlag-1;
				arr = new Array();
				for(var i:int=0; i<flexpaper.paper1.numPages; i++) {
					var pagenum:Object = new Object();
					pagenum.label=i+1;
					pagenum.data=i+1;
					arr.push(pagenum);
				}
				sp.dataProvider=arr;
			}
			private function netStatusHandler(evt:NetStatusEvent):void {
				var info:Object = evt.info;
				switch (info.code) {
					case "NetConnection.Connect.Success":
						myPaper.addEventListener(MouseEvent.MOUSE_DOWN,downHandler);
						var param:Object=this.stage.loaderInfo.parameters;
						//获取教室的唯一id
						if (param["str"]!=null) {
							remoteShareObject = SharedObject.getRemote(param["str"], netConnection.uri, true);
						} else {
							remoteShareObject = SharedObject.getRemote("chinesegrea12t", netConnection.uri, true);
						}
						remoteShareObject.addEventListener(SyncEvent.SYNC, paintSoSyncHandler);
						remoteShareObject.connect(netConnection);
						remoteShareObject.fps=120;
						// 暴露添加上传图标方法
						ExternalInterface.addCallback("addUploadIcon", fileSyn);
						// 暴露切换SWF文件方法于JS
						ExternalInterface.addCallback("tranFile", changeFile);
					break;
					case "NetConnection.Connect.Rejected":
						Alert.show("fms连接被拒绝"+info.code);
					break;
					case "NetConnection.Connect.Failed":
						Alert.show("fms连接失败"+evt.info.code);
					break;
					case "NetConnection.Connect.Closed":
						Alert.show("fms连接已经关闭"+evt.info.code);
						remoteShareObject.clear();
					break;
				}
			}
			private function fileSyn(upFile:String, swfPath:String, upFileType:String, domain:String):void {
				addShareKey("fileSyn", upFile+";"+swfPath+";"+upFileType+";"+domain);
			}
			private function downHandler(evt:MouseEvent):void {
			 	myPaper.addEventListener(MouseEvent.MOUSE_MOVE,moveHandler);
			 	myPaper.removeEventListener(MouseEvent.MOUSE_DOWN,downHandler);
			 	theId=remoteShareObject.data.Point_ID++;
			}
			private function moveHandler(evt:MouseEvent):void {				
				myPaper.addEventListener(MouseEvent.MOUSE_UP,upHandler);
				var MouseArray:ArrayCollection=new ArrayCollection();
				if (remoteShareObject.data.dataArr!=null) {
					convertArrayCollection(MouseArray,remoteShareObject.data.dataArr as ArrayCollection);	
				}
				var thePoint:MousePoint = new MousePoint();
				thePoint.point_x=myPaper.mouseX;
				thePoint.point_y=myPaper.mouseY;
				thePoint.id=theId;
				MouseArray.addItem(thePoint);
				paint(MouseArray, remoteShareObject.data.lineSize, remoteShareObject.data.lineColor);
				addShareKey("dataArr", MouseArray);
			}
			private function paintSoSyncHandler(evt:SyncEvent):void {
				for each(var item:Object in evt.changeList){
					switch(item.code){
						case "change":
							doAction(item);
							break;
						case "success":
							doAction(item);
							break;
						case "reject":
							break;
						case "delete":
							break;
					}					
				}
			}
			private function doAction(item:Object):void {
				if (item.name=="lineSize") {
					__lineSize=remoteShareObject.data.lineSize;
					pen_size.selectedIndex=remoteShareObject.data.lineSize-1;
				}
				if (item.name=="lineColor") {
					__lineColor=remoteShareObject.data.lineColor;
					pen_color.selectedColor=remoteShareObject.data.lineColor;
				}
				if (item.name=="dataArr" && remoteShareObject.data.dataArr!=null) {
					var success_tmp:ArrayCollection = new ArrayCollection();
					convertArrayCollection(success_tmp,remoteShareObject.data.dataArr as ArrayCollection);						
					paint(success_tmp,__lineSize,__lineColor);
				}
				//清除画板内容同步
				if (item.name=="action") {
					myPaper.graphics.clear();
				}
				//换文件同步
				if (item.name=="changeFile") {
					myPaper.graphics.clear();
					pageFlag=1;
					changeFile(remoteShareObject.data.changeFile);
				}
				//换页同步
				if (item.name=="changePage" && remoteShareObject.data.changePage!=null && flag!=0) {
					myPaper.graphics.clear();
					flexpaper.paper1.gotoPage(remoteShareObject.data.changePage);
					sp.selectedIndex=remoteShareObject.data.changePage-1;
					flexpaper.paper1.height=1000;
					dr.addChild(myPaper);
					dr.addChildAt(flexpaper,0);
					addShareKey("changePage", remoteShareObject.data.changePage);
				}
				if (item.name=="changePage" && flag==0) {
					pageFlag=remoteShareObject.data.changePage;
					flag=1;
				}
				//画板滚动同步
				if (item.name=="verRoll" && remoteShareObject.data.verRoll!=null) {
					shareRoll(remoteShareObject.data.verRoll);
				}
				if (item.name=="fileSyn") {
					var str:String=remoteShareObject.data.fileSyn as String;
					var str1:Array=str.split(";");
					ExternalInterface.call("addUploadIcon", str1[0], str1[1], str1[2], str1[3]);
				}
			}
			private function paint(_Arr:ArrayCollection, lineSize:int, lineColor:uint):void {				
				var len:int=_Arr.length;
				if (len>0) {
					myPaper.graphics.lineStyle(lineSize, lineColor, 1);
					myPaper.graphics.moveTo(_Arr.getItemAt(0).point_x, _Arr.getItemAt(0).point_y);
					for (var i:int=0; i<len-1; i++) {
						myPaper.graphics.lineTo(_Arr.getItemAt(i).point_x,_Arr.getItemAt(i).point_y);
					}
				}
			}
			private function upHandler(evt:MouseEvent):void {
				myPaper.removeEventListener(MouseEvent.MOUSE_MOVE, moveHandler);
				myPaper.addEventListener(MouseEvent.MOUSE_DOWN, downHandler); 	
				//清除上次记录
				var MouseArray:ArrayCollection = new ArrayCollection();
				MouseArray.removeAll();
				addShareKey("dataArr", MouseArray);
			}
			private function convertArrayCollection(arrNew:ArrayCollection,arrOld:ArrayCollection):void {
				arrNew.removeAll();
				for (var i:int=0; i<arrOld.length; i++) {
					arrNew.addItemAt(arrOld.getItemAt(i), i);
				}
			}
			private function changeColor():void {
				__lineColor = pen_color.selectedColor;
				addShareKey("lineColor", __lineColor);
			}
			private function changeSize():void {
				__lineSize = pen_size.selectedItem.data;
				addShareKey("lineSize", __lineSize);
			}
			private function clear():void {
				Alert.show("你确定要清除当前画板吗", "警告", Alert.YES | Alert.NO, this, closeHandler);
			}
			private function closeHandler(evt:CloseEvent):void {
				if (evt.detail == Alert.YES) {
					var rnd:int = Math.random()*1000;
					if (remoteShareObject.data.action==rnd) {
						rnd = Math.random()*2000 + 1000;
					}
					addShareKey("action", rnd);
				}
			}	
			private function closeHandler1():void {
				var rnd:int=Math.random()*1000;
				if (remoteShareObject.data.action == rnd) {
					rnd = Math.random()*2000 + 1000;
				}
				addShareKey("action", rnd);
			}
			//文档换页
			private function change(type:Number):void {
				var pages:Number=sp.selectedItem.data;
				if (type==-1 && sp.selectedItem.data>1) {
					pages = sp.selectedItem.data-1;
				}
				if (type==1 && sp.selectedItem.data<flexpaper.paper1.numPages) {
					pages = sp.selectedItem.data+1;
				}
				myPaper.graphics.clear();
				flexpaper.paper1.gotoPage(pages);
				addShareKey("changePage", pages);
				//a.Scale=sp.selectedItem.data;
				//a.paper1.fitHeight();
				//a.paper1.fitWidth();
				//flexpaper.paper1.height=1000;
				//a.paper1.setActualSize(500,200);
				//a.paper1.ViewMode="TwoPage";
				//pdf 总页数
				//Alert.show(a.paper1.numPages.toString()+a.paper1.currPage+a.paper1.height);
				//dr.addChild(myPaper);
				//dr.addChildAt(flexpaper,0);
			}
			private function addShareKey(key:String, value:Object):void {
				if (!shareKeyList.contains(key)) {
					shareKeyList.addItem(key);
				}
				remoteShareObject.setProperty(key, value);
			}
		]]>
	</mx:Script>

	<mx:Panel titleIcon="@Embed(source='assert/logo.jpg')" title="ChineseGreat Online Classroom" x="1" y="1" id="mainPanel" fontFamily="_sans" fontSize="13" fontWeight="bold" width="600" height="550" layout="absolute" horizontalScrollPolicy="off" verticalScrollPolicy="on">
		<mx:Canvas left="-10" horizontalScrollPolicy="off" verticalScrollPolicy="off" width="600" height="850" backgroundSize="100%" id="dr" backgroundAlpha="1.0"><!-- 画板容器 --><mx:Canvas backgroundAlpha="0" id="myPaper" top="22" horizontalScrollPolicy="off" verticalScrollPolicy="off" width="585" height="850" styleName="paper" y="0" x="0"/></mx:Canvas>
	</mx:Panel>
	<mx:HBox x="10" y="30" paddingLeft="35" width="565" height="30" backgroundColor="#F2F2F2">
		<mx:Label fontSize="12" text="画笔颜色:"/><mx:ColorPicker id="pen_color" width="20" height="20" change="changeColor()"/>
		<mx:Label paddingLeft="10" fontSize="12" text="画笔粗细:"/><mx:ComboBox dataProvider="{arrPen}" width="50" id="pen_size" change="changeSize();"/>
		<mx:Label paddingLeft="10" fontSize="12" text="文件页码:"/><mx:Image useHandCursor="true" buttonMode="true" mouseChildren="false" source="@Embed('assert/2.gif')" click="change(-1)"/>
		<mx:ComboBox dataProvider="{arr}" width="55" id="sp" change="change(0);"/>
		<mx:Image useHandCursor="true" buttonMode="true" mouseChildren="false" source="@Embed('assert/1.gif')" click="change(1)"/>
		<mx:VBox paddingLeft="10"><mx:Button id="clearBtn" fontSize="12" label="清除画板" click="clear()"/></mx:VBox>
	</mx:HBox>
	<mx:HRule width="565" x="10" y="60"/>
</mx:Application>
