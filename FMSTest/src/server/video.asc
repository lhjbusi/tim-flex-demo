var userClients;
application.onAppStart = function () {
	trace("服务器启动");
	userClients = new Object();
}
application.onConnect = function(client, myId, myName, calleeId, roomName) {
	trace(myId+"链接进来。calleeId："+calleeId);
	client.connectWhithP2P = function() {
		client.p2p = true;
	}
	try{
		client["myId"] = myId;
		client["myName"] = myName;
		client["calleeId"] = calleeId;
		client["roomName"] = roomName;
		userClients[myId] = client;

		var _members;
		var myso=SharedObject.get(roomName, true);
		if (myso.getProperty("Members")) {
			_members=myso.getProperty("Members");
		} else {
			_members=new Array();				
		}
		for(var i=0;i<_members.length;i++){
			if(_members[i].myName==myName){
				var objMsg=new Object();	
				objMsg.msg="您已经登陆了";
				objMsg.title="出错信息"
				application.rejectConnection(client, objMsg);
				return;
			}
		}

		var obj=new Object();
		obj.myName=myName;
		_members.push(obj);
		myso.lock();
		myso.setProperty("Members", _members);
		myso.unlock();
		myso.flush();

		client.getOtherPeerId = function(calleeId) {
			trace(client.myId+"尝试获取"+calleeId+"的PeerId.");
			var otherClient = userClients[calleeId];
			if (otherClient != null) {
				var otherPeerId = otherClient.peerId;
				trace(client.myId+"尝试获取PeerId："+otherPeerId+"\n\n");
				if (otherPeerId == null)  {
					client.call("getOtherPeerId", null, "");
				} else {
					client.call("getOtherPeerId", null, otherPeerId);
				}
			}
		}
		client.setMyPeerId = function(peerId) {
			client["peerId"] = peerId;
			userClients[client.myId]=client;
			trace(client.myId+"设置PeerId："+peerId);
		}
		application.acceptConnection(client);
	} catch(e) {
		var objMsg=new Object();
		application.rejectConnection(client,objMsg);
	}
}

application.onDisconnect = function (client) {
	var myso=SharedObject.get(client.roomName,true);
	try {
		var _members=myso.getProperty("Members");
		var _bool=false;
		if (_members.length>1) {
			for (var i=0; i<_members.length; i++) {
				if (_members[i].myName==client.myName) {
					_bool=true;
					var startInd=i;
					break;
				}
			}
			if (_bool) {
				_members.splice(startInd,1);
				myso.lock();
				myso.setProperty("Members",_members);		
				myso.unlock();
				myso.flush();
			}
		} else {
			myso.clear();
			myso.flush();
		}
	} catch(e) {
		myso.clear();
		myso.flush();
	}
	trace("连接上P2P："+(client.p2p == null))
	if (client.p2p == null) {
		var calleeId = client.calleeId;
		var otherClient = userClients[calleeId];
		if (otherClient != null) {
			otherClient.call("fmsClose", null);
		}
	}
	delete userClients[client.myId];
}

application.onAppStop = function() {

}
