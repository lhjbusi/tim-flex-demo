load("netservices.asc");
application.onAppStart = function() {
};
var clientMap = new Object();
application.onConnect = function(client, userId, userName) {
	if (userId == null || userName == null) {
		return false;
	}
	// 关联用户编号
	client.userId = userId;
	// 关联用户名称
	client.userName = userName;
	var count=1;
	// 获取所有在线用户
	var myso=SharedObject.get("onlineUser", true);
	// 获取对应连接
	var oldClient=myso[userId];
	if (oldClient != null) {
		trace(userID+"重复初始化进来");
		clearInterval(myso[userId]);
	} else {
		if (oldClient[userId] != null) {
			oldClient[userId].count=oldClient[userId].count+1;
			myso[userId] = 
			return;
		}
	}
	//for (var i=0; i<_members.length; i++) {
	//	if (_members[i].userId==client.userId) {
	//		_members[i].count=_members[i].count+1;
	//		trace(_members[i].userId+"qqq"+client.userId+"aaa"+_members[i].count);
	//		myso.setProperty("Members", _members);
	//		return;
	//	}
	//}
	var obj=new Object();
	// 关联用户编号
	obj.userID=userID;
	// 用户连接个数
	obj.count=count;
	_members.push(obj);
	myso.setProperty("Members",_members);
	// 将用户请求对象与用户编号建立关系
	clientMap[userId] = client;
	application.acceptConnection(client);
	
	client.sendRequest = function(receiveId, requestType) {
		// 获取被请求对象的连接
		var otherClient = clientMap[receiveId];
		// 不存在的用户
		if (otherClient == null) {
			client.call("userIsOffline", null);
			return;
		}
		// 调用被请求者客户端方法
		otherClient.call("requestStatusHandler", null, client.userId, client.userName, requestType);
		// 告知请求者,用户正在处理聊天请求
		client.call("sendRequestResult", null, otherClient.userId, requestType);
	}
	client.sendRequestStatus = function(callerId, requestType, status) {
		clientMap[callerId].call("requestStatusResult", null, client.userId, client.userName, requestType, status);
	}
}
application.onDisconnect = function (client) {
	var myso=SharedObject.get("onlineUser", true);	
	try{
		var _members=myso.getProperty("Members");
		var _bool=false;
		if (_members.length>0) {
			for (var i=0; i<_members.length; i++) {
				if (_members[i].userId==client.userId) {
					_bool=true;
					var startInd=i;
					if (_members[i].count>1) {
						_bool=false;
						_members[i].count=_members[i].count-1;
						trace(_members[i].count);
						myso.setProperty("Members",_members);
					}
					break;
				}
			}
			if (_bool) {
				var intervalID; 
				intervalID = setInterval(function() {
					trace(client.userID+"离开");
					NetServices.setDefaultGatewayUrl('http://192.168.1.138/CG/home.do?p=logoutFromFlash&userID='+client.userID);
					var conn = NetServices.createGatewayConnection();
					conn.call("");
				}, 10000); 
				trace("afterIntervalID");
				myso.setProperty(_members[startInd].userID, intervalID);
				_members.splice(startInd,1);
				myso.lock();
		        myso.setProperty("Members", _members);			
				myso.unlock();
				myso.flush();
				// sometime later 
				setInterval(function(){clearInterval(intervalID);},10000);
				//clearInterval(intervalID);
			}
		} else {
			myso.clear();
			myso.flush();
		}
	} catch(e) {
		myso.clear();
		myso.flush();
	}
}
