<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute">
<mx:Style>
	Label,Button{font-size:18;}
	TextInput,TextArea{font-size:16;}
</mx:Style>
<mx:Script>
	<![CDATA[
		import mx.events.CloseEvent;
		import mx.controls.Alert;
		import flash.media.Camera;

		private var netConnection:NetConnection;
		private var RTMFPServer:String = "rtmfp://p2p.rtmfp.net/";
		private var DevelopKey:String = "6a91aba7ed517ffaa2f08c78-a9d109ffdd82";
		private var myStream:NetStream;
		private var sendStream:NetStream;
		private var reciveStream:NetStream;
		private var controlStream:NetStream;
		private var localVideo:Video;
		private var remoteVideo:Video;
		private function init():void {
			if (userName.text == "") {
				Alert.show("请输入用户名", "错误");
				userName.focusEnabled = true;
				return;
			}
			netConnection = new NetConnection();
			netConnection.addEventListener(NetStatusEvent.NET_STATUS, netConnectionHandler);
			netConnection.connect(RTMFPServer, DevelopKey);
		}
		
		private function netConnectionHandler(event:NetStatusEvent):void {
			switch(event.info.code) {
				case "NetConnection.Connect.Success":
					commonMessage.text += "你好"+userName.text+"，你已连接上Stratus服务器\n\n";
					commonMessage.text += "你的neerId是：\n" + netConnection.nearID + "\n对方可以用这个ID呼叫你\n\n";
					initSendStream();
				break;
			}
		}
		private function initSendStream():void {
			myStream = new NetStream(netConnection, NetStream.DIRECT_CONNECTIONS);
			myStream.addEventListener(NetStatusEvent.NET_STATUS, myStreamHandler);
			myStream.publish(netConnection.nearID);
			
			var obj:Object = new Object;
			obj.onPeerConnect = function(subscriberStream:NetStream):Boolean {
				Alert.show("已经执行了onPeerConnect方法了");
				reciveStream = new NetStream(netConnection, subscriberStream.farID);
				reciveStream.play("caller");

				var recive:Object = new Object;
				recive.inComingCall = function(name:String):void {
					commonMessage.text += name + "：已和你建立连接\n";
					sendStream = new NetStream(netConnection, NetStream.DIRECT_CONNECTIONS);
					// 发布被叫信息
					sendStream.publish("callee");
					// 告诉呼叫者连接成功
					sendStream.send("connectSuccess", userName.text);
					
				}
				recive.connectVideoSuccess = connectVideoSuccess;
				recive.requestVideo = requestVideo;
				recive.refuseVideo = refuseVideo;
				reciveStream.client = recive;
				return true;
			}
			myStream.client = obj;
		}
		// 提供呼叫者-呼叫功能
		private function call():void {
			controlStream = new NetStream(netConnection, peerId.text);
			controlStream.play(peerId.text);

			// 发布自己身份流
			sendStream = new NetStream(netConnection, NetStream.DIRECT_CONNECTIONS);
			sendStream.addEventListener(NetStatusEvent.NET_STATUS, sendStreamHandler);
			sendStream.publish("caller");

			// 接收被呼叫者信息
			reciveStream = new NetStream(netConnection, peerId.text);
			reciveStream.play("callee");
			commonMessage.text += "正在呼叫请等待\n";
			
			var recive:Object = new Object;
			recive.connectSuccess = function(name:String):void {
				commonMessage.text += "与《" + name + "》连接成功\n";
			}
			recive.requestVideo = requestVideo;
			recive.refuseVideo = refuseVideo;
			recive.connectVideoSuccess = connectVideoSuccess;
			reciveStream.client = recive;
		}
		private function openVideo():void {
			sendStream.attachCamera(showLocalCamera());
			sendStream.send("requestVideo", userName.text);
		}
		private function showLocalCamera():Camera {
			var camera:Camera = Camera.getCamera();
			camera.setMode(262, 192, 60);
			camera.setQuality(100*1024, 0);
			localVideo = new Video();
			localVideo.width = 262;
			localVideo.height = 192;
			localVideo.attachCamera(camera);
			localDisplay.addChild(localVideo);
			return camera;
		}
		private function connectVideoSuccess():void {
			reciveStream.receiveVideo(true);
			remoteVideo = new Video();
			remoteVideo.width = 262;
			remoteVideo.height = 192;
			remoteVideo.attachNetStream(reciveStream);
			remoteDisplay.addChild(remoteVideo);
		}
		private function requestVideo(name:String):void {
			Alert.show(name + "：向你发起视频请求，是否接受？","提示", (Alert.YES | Alert.NO), null, requestVideoHandler);
		}
		private function refuseVideo(name:String):void {
			Alert.show(name + "：拒绝了视频请求", "消息");
		}
		private function requestVideoHandler(event:CloseEvent):void {
			switch(event.detail) {
				case Alert.YES:
					sendStream.attachCamera(showLocalCamera());

					reciveStream.receiveVideo(true);
					remoteVideo = new Video();
					remoteVideo.width = 262;
					remoteVideo.height = 192;
					remoteVideo.attachNetStream(reciveStream);
					remoteDisplay.addChild(remoteVideo);
					sendStream.send("connectVideoSuccess");
				break;
				case Alert.NO:
					sendStream.send("refuseVideo", userName.text);
				break;
			}
		}
		private function myStreamHandler(event:NetStatusEvent):void {
		}
		private function sendStreamHandler(event:NetStatusEvent):void {
			if (event.info.code == "NetStream.Play.Start") {
				sendStream.send("inComingCall", userName.text);
			}
		}
		private function autoScrollBottom(textArea:TextArea):void {
			if (textArea.verticalScrollPosition < textArea.maxVerticalScrollPosition)
				textArea.verticalScrollPosition = textArea.maxVerticalScrollPosition;
		}
	]]>
</mx:Script>
	<mx:TextArea id="commonMessage" updateComplete="autoScrollBottom(commonMessage);" x="10" y="49" width="383" height="238"/>
	<mx:VideoDisplay id="remoteDisplay" x="401" y="10" width="262" height="192"/>
	<mx:VideoDisplay id="localDisplay" x="401" y="210" width="262" height="192"/>
	<mx:Button x="328" y="334" label="呼叫" height="28" click="call();"/>
	<mx:Button x="328" y="298" click="init();" label="链接" height="28"/>
	<mx:Label x="10" y="10" text="公告信息:" width="104" height="31"/>
	<mx:Label x="10" y="334" text="PearId" height="28"/>
	<mx:TextInput id="peerId" x="83" y="334" width="237" height="28"/>
	<mx:Label x="10" y="298" text="用户名：" height="28"/>
	<mx:TextInput id="userName" x="83" y="298" width="237" height="28"/>
	<mx:Button x="11" y="370" click="openVideo();" label="请求视频" width="104"/>
	<mx:Button x="288" y="370" label="断开链接" width="104"/>
	<mx:HSlider x="160" y="20" width="202"/>
	
</mx:Application>
